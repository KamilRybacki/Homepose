version: "3.7"
services:
  drone-server:
    image: drone/drone:1.6.2
    container_name: drone 
    ports:
      - ${DRONE_PORT}:80
      - 9000
    networks:
      - shared-network
    volumes:
      - ${DRONE_MOUNT_POINT}:/var/lib/drone/
    restart: always
    environment:
      - VIRTUAL_HOST=drone.${HOMEPOSE_DOMAIN}.lan
      - LETSENCRYPT_HOST=drone.${HOMEPOSE_DOMAIN}.lan
      - VIRTUAL_PORT=80
      - DRONE_OPEN=false
      - DRONE_GITEA_SERVER=http://gitea.${HOMEPOSE_DOMAIN}.lan
      - DRONE_GITEA_CLIENT_ID=e7757698-0347-4c82-bb8f-c665ac1b3099
      - DRONE_GITEA_CLIENT_SECRET=QW6pCmkR7kwaKEAWspKtYSznrY5nTezuVzGyodLqMIOR
      - DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_SERVER_HOST=drone.${HOMEPOSE_DOMAIN}.lan
      - DRONE_SERVER_PROTO=http
      - DRONE_NETWORK=shared-network
      - DRONE_RUNNER_NETWORKS=shared-network
      - DRONE_USER_CREATE=username:gitea,admin:true
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RPC_SECRET=${DRONE_SECRET}
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_TEXT=true
      - DRONE_LOGS_PRETTY=true
      - DRONE_LOGS_COLOR=true
      - DRONE_AGENTS_ENABLES=true
      - DRONE_TLS_AUTOCERT=false
    user: "${UID}:${GID}"
  drone-agent:
    image: drone/drone-runner-docker:1.6.2
    container_name: drone-runner 
    ports:
      - 0:3000
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=${HOMEPOSE_IP_ADDRESS}:0
      - DRONE_RPC_SECRET=${DRONE_SECRET}
      - DRONE_RUNNER_NAME=${HOSTNAME}
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_NETWORK=shared-network
      - DRONE_RUNNER_NETWORKS=shared-network
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_TEXT=true
      - DRONE_LOGS_PRETTY=true
      - DRONE_LOGS_COLOR=true
      - DRONE_LOGS_TRACE=true
    networks:
      - shared-network
# drone-runner:
#     image: drone/drone-runner-docker:latest
#     container_name: 
#     restart: always
#     depends_on:
#       - drone
#     networks:
#       - shared-network
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#     depends_on:
#       - drone
#     links:
#       - drone
#     environment:
#       - DRONE_RPC_HOST=${HOMEPOSE_DOCKER_NETWORK}cicd-server:${DRONE_SERVER_PORT}
#       - DRONE_RPC_PROTO=http
#       - DRONE_RPC_SECRET=
#       - DRONE_RUNNER_NAME=${HOMEPOSE_DOCKER_NETWORK}runner
#       - DRONE_RUNNER_CAPACITY=20
networks:
  shared-network:
    external: true
    name: ${HOMEPOSE_DOCKER_NETWORK}
